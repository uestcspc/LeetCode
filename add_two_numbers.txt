给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

请你将两个数相加，并以相同形式返回一个表示和的链表。

你可以假设除了数字 0 之外，这两个数都不会以 0 开头。

 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) {
	 struct ListNode *p1 = l1;
    struct ListNode *p2 = l2;
    struct ListNode *head = NULL;
    struct ListNode *tail = NULL;
    head = tail = malloc(sizeof(struct ListNode));
    int sum = 0;
    int carry = 0;
    while (p1 != NULL || p2 != NULL) {
        int n1 = p1 ? p1->val : 0;
        int n2 = p2 ? p2->val : 0;
        sum = n1 + n2 + carry;
        carry = sum / 10;
        tail->val = sum % 10;
        tail->next = malloc(sizeof(struct ListNode));
        tail = tail->next;
        p1 = p1->next;
        p2 = p2->next;
    }
    if (carry != 0) {
        tail->val = carry;;
        tail->next = NULL;
    } else {       
        tail = NULL;
    }
    return head;
}
